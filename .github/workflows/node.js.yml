# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  EM_VERSION: 2.0.18
  EM_CACHE_DIR: 'emsdk-cache'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache mG.bin
      uses: actions/cache@v2
      with:
        path: ~/.EllipticPIR
        key: mG.bin

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1

    - name: Install npm dependencies
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        npm ci

    - name: Cache emsdk-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.EM_CACHE_DIR }}
        key: emsdk-cache-${{ env.EM_VERSION }}-${{ runner.os }}

    - name: Setup emsdk
      uses: mymindstorm/setup-emsdk@v9
      with:
        version: ${{ env.EM_VERSION }}
        actions-cache-folder: ${{ env.EM_CACHE_DIR }}

    - name: Build WebAssembly (Emscripten)
      run: npm run em:build

    - name: Install wasm-pack
      run: cargo install wasm-pack

    - name: Build WebAssembly (Rust)
      run: npm run wasm:build

    - name: Build
      run: npm run build --if-present

    - name: Test
      run: npm test -- --maxWorkers=2

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        name: node-${{ matrix.node-version }}

    - name: Build Nuxt
      run: npm run nuxt:generate

    - name: Deploy to GitHub pages
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ (github.ref == 'refs/heads/master') && (matrix.node-version == '16.x') }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build_nuxt
        cname: demo.ellipticpir.com

    - name: Lint
      run: npm run lint

